一般表主键都会创建索引，而Guid建完聚集索引后，可以较大的提升查询速度，但是也严重降低了插入的速度。
聚集索引是物理排序，每一次插入数据，都会重排整个结构，如果数据量大为2000条，那速度会用到1分钟以上。
解决方案：我们可以给2000条数据的Guid生成连续的Guid，这样插入时物理排序的时间就可以降到最小。
GUID 自增长，使用的是系统函数 NEWSEQUENTIONALID()
sql如下：
学习来自——微软顾问
以下为测试代码：
CREATE TABLE T_GUID
(
TESTID UNIQUEIDENTIFIER DEFAULT(NEWSEQUENTIALID()),
TESTSTR VARCHAR(22)
)

DECLARE @I INT 
SET @I=1

WHILE(@I<200)
BEGIN
	INSERT INTO T_GUID(TESTSTR)
	VALUES(@I);
	SET @I=@I+1;
END


SELECT * FROM T_GUID

以下为查询结果集：
TESTID	                              TESTSTR
D413A5D3-DD62-E711-80D3-D1CEDF93E422	5
D513A5D3-DD62-E711-80D3-D1CEDF93E422	6
D613A5D3-DD62-E711-80D3-D1CEDF93E422	7
D713A5D3-DD62-E711-80D3-D1CEDF93E422	8
D813A5D3-DD62-E711-80D3-D1CEDF93E422	9
D913A5D3-DD62-E711-80D3-D1CEDF93E422	10
DA13A5D3-DD62-E711-80D3-D1CEDF93E422	11
DB13A5D3-DD62-E711-80D3-D1CEDF93E422	12
DC13A5D3-DD62-E711-80D3-D1CEDF93E422	13
DD13A5D3-DD62-E711-80D3-D1CEDF93E422	14
DE13A5D3-DD62-E711-80D3-D1CEDF93E422	15

此链接介绍的非常清楚：
http://blog.csdn.net/xushichang/article/details/4390957

另外，guid是uuid的一种，微软的guid是uuid的一种很好的使用

学好每一种专业技术
